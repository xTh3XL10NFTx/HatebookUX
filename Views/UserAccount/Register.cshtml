@model HatebookUX.Models.Register

@{
    ViewData["Title"] = "Register";

    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

<style>
    .profile-picture-options {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .profile-picture-option {
        flex-grow: 1;
        text-align: center;
        padding: 6px;
    }

        .profile-picture-option label {
            display: block;
        }

    .profile-picture-input {
        height: 40px; /* Set a fixed height for the input containers */
    }

    .back-to-home {
        margin-bottom: 30px; /* Add margin-bottom to create space between the button and the footer */
        text-align: right;
    }

    .error-message {
        background-color: var(--bs-danger);
        color: white;
        padding: 10px;
        padding-left: 20px;
        padding-bottom: 0;
        margin-bottom: 0;
        border: 1px solid var(--bs-danger);
        border-radius: 4px;
        list-style-type: disc; /* Bullet list style */
        margin-left: 20px; /* Add indentation to the list items */
    }
</style>


<br />
<h1>Register</h1>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}

<hr />
<div class="row">
    <div class="col-md-6 offset-md-3">
        <form asp-action="Register" id="registerForm">
            <fieldset>
                <legend>Personal Information</legend>

                <div class="form-group">
                    <label asp-for="email" class="control-label">Email</label>
                    <input asp-for="email" class="form-control" placeholder="Enter your email" required />
                </div>
                <div class="form-group">
                    <label asp-for="password" class="control-label">Password</label>
                    <input asp-for="password" class="form-control" placeholder="Enter a password" required />
                </div>
                <div class="form-group">
                    <label asp-for="firstName" class="control-label">First Name</label>
                    <input asp-for="firstName" class="form-control" placeholder="Enter your first name" required />
                </div>
                <div class="form-group">
                    <label asp-for="lastName" class="control-label">Last Name</label>
                    <input asp-for="lastName" class="form-control" placeholder="Enter your last name" required />
                </div>
                <div class="form-group">
                    <label asp-for="birthday" class="control-label">Birthday</label>
                    <input asp-for="birthday" class="form-control" placeholder="Enter your birthday" required />
                </div>
                <div class="form-group">
                    <label asp-for="gender" class="control-label">Gender</label>
                    <select asp-for="gender" class="form-control" required>
                        @foreach (var genderType in Enum.GetValues(typeof(GenderType)))
                        {
                            <option value="@genderType">@genderType</option>
                        }
                    </select>
                </div>
                <div>
                    <label for="profilePictureOption">Upload a profile picture (optional)</label>
                </div>

                <div class="profile-picture-options">
                    <div class="profile-picture-option">
                        <input type="radio" class="btn-check" name="profilePictureOption" id="urlOption" autocomplete="off">
                        <label class="btn btn-outline-primary" for="urlOption">URL</label>
                    </div>

                    <div class="profile-picture-option">
                        <input type="radio" class="btn-check" name="profilePictureOption" id="fileOption" autocomplete="off">
                        <label class="btn btn-outline-primary" for="fileOption">File</label>
                    </div>
                </div>

                <div id="urlInput" style="display: none;">
                    <input type="text" asp-for="profilePicture" class="form-control profile-picture-input" />
                </div>

                <div id="fileInput" style="display: none;">
                    <input type="file" asp-for="profilePicture" class="form-control-file profile-picture-input" />
                </div>

                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        const urlOption = document.getElementById('urlOption');
                        const fileOption = document.getElementById('fileOption');
                        const urlInput = document.getElementById('urlInput');
                        const fileInput = document.getElementById('fileInput');

                        // Handle radio button change event
                        urlOption.addEventListener('change', function () {
                            if (urlOption.checked) {
                                urlInput.style.display = 'block';
                                fileInput.style.display = 'none';
                            }
                        });

                        fileOption.addEventListener('change', function () {
                            if (fileOption.checked) {
                                fileInput.style.display = 'block';
                                urlInput.style.display = 'none';
                            }
                        });
                    });

                    // Client-side form validation
                    document.getElementById('registerForm').addEventListener('submit', function (event) {
                        if (!this.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }

                        this.classList.add('was-validated');
                    });
                </script>

                <legend>Role</legend>

                <div class="form-group">
                    @foreach (var role in Model.Roles)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio" asp-for="SelectedRole" value="@role.Name" id="@role.Name" required />
                            <label class="form-check-label" for="@role.Name">@role.Name</label>
                        </div>
                    }
                </div>
            </fieldset>


            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <br />
                <div class="error-message">
                    <p>There has been an error in your account registration: </p>
                    @Html.Raw(errorMessage)
                </div>
                <br />
            }
            <div class="form-group mt-4">
                <div class="d-flex justify-content-between align-items-center">
                    <button type="submit" id="dontDisappear" class="btn btn-secondary">Register</button>
                    <a asp-action="Index" class="btn btn-primary">Already have an account? Log in here!</a>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="back-to-home">
    <br />
    <span>&#8592;</span><a asp-action="Index" class="btn btn-link btn-block">Back to homepage</a>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var form = document.getElementById('registerForm');
        var button = document.getElementById('dontDisappear');

        Array.from(form.elements).forEach(function (element) {
            element.addEventListener('input', function () {
                if (element.checkValidity()) {
                    element.classList.remove('is-invalid');
                    element.classList.add('is-valid');
                } else {
                    element.classList.remove('is-valid');
                    element.classList.add('is-invalid');
                    element.nextElementSibling.textContent = element.validationMessage;
                }

                button.classList.add('is-invalid');
                button.style.display = 'block';
            });
        });
    });
</script>
